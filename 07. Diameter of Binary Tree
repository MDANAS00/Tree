Link - https://leetcode.com/problems/diameter-of-binary-tree/
Time Complexity - O(N)
Space Complexity - O(H)

class Solution {
    int diameter = 0;
    
    public int height(TreeNode root) {
        if(root == null) return 0;

        int left = height(root.left);
        int right = height(root.right);

        diameter = Math.max(diameter,left+right+1);

        return Math.max(left,right) + 1;
    }

    public int diameterOfBinaryTree(TreeNode root) {
        if(root == null) return 0;
        if(root.left == null && root.right == null) return 0;
        height(root);
        return diameter - 1;    
    }
}