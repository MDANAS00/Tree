Link - https://leetcode.com/problems/symmetric-tree/
Time Complexity - O(N)
Space Complexity - O(H)

class Solution {
    public boolean isMirror(TreeNode p, TreeNode q) {
        if(p == null && q == null) return true;
        if(p == null || q == null) return false;
        if(p.val != q.val) return false;

        return isMirror(p.right,q.left) && isMirror(p.left,q.right);
    }

    public boolean isSymmetric(TreeNode root) {
        return isMirror(root,root);
    }
}