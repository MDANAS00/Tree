Link - https://leetcode.com/problems/binary-tree-right-side-view/
Time Complexity - O(N)
Space Complexity - O(H)

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> right = new ArrayList<>();
        if(root == null) return right;
        
        Deque<TreeNode> q = new ArrayDeque<>();
        q.add(root);

        while(q.size() > 0) {
            right.add(q.getLast().val);
            for(int c = q.size();c > 0; c--) {
                root = q.remove();
                if(root.left != null) q.add(root.left);
                if(root.right != null) q.add(root.right);
            }
        }
        return right;
    }
}