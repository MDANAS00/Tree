Link - https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/
Time Complexity - O(N)
Space Complexity - O(H)

class Solution {
    public int maxLevelSum(TreeNode root) {
        Queue<TreeNode> q = new ArrayDeque<>();
        q.add(root);

        int maxSum = Integer.MIN_VALUE, maxLevel = 0;
        int curSum = 0, curLevel = 0;
        while(q.size() > 0) {
            curSum = 0; curLevel++;
            for(int c = q.size();c>0;c--) {
                root = q.remove();
                curSum += root.val;
                if(root.left != null) q.add(root.left);
                if(root.right != null) q.add(root.right);
            }
            if(curSum > maxSum) {
                maxSum = curSum;
                maxLevel = curLevel;
            }
        }
        return maxLevel;
    }
}