Link - https://leetcode.com/problems/n-ary-tree-postorder-traversal/
Time Complexity - O(N)
Space Complexity - O(H)

class Solution {
        List<Integer> ans = new ArrayList<>();
    
    public void dfs(Node root) {
        for(Node child: root.children) {
            dfs(child);
        }
        ans.add(root.val);
    }

    public List<Integer> postorder(Node root) {
        if(root != null) dfs(root);
        return ans;
    }
}