Link - https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/
Time Complexity - O(N)
Space Complexity - O(H)

//Solution 1 with extra space queue

class Solution {
    public Node connect(Node root) {
        if(root == null) return null;

        Queue<Node> q = new ArrayDeque<>();
        q.add(root);

        while(q.size() > 0) {
            for(int c = q.size(); c > 0; c--) {
                Node curr = q.remove();
                if(c > 1) curr.next = q.peek();
                if(curr.left != null) q.add(curr.left);
                if(curr.right != null) q.add(curr.right);
            }
        }
        return root;
    }
}


// Soluton 2 without extra Space

class Solution {
    public Node connect(Node root) {
        Node curr = root;
        while(curr != null) {
            Node head = new Node(-1);
            Node tail = head;

            for(;curr != null;curr = curr.next) {
                if(curr.left != null) {
                    tail.next = curr.left;
                    tail = tail.next;
                }
                if(curr.right != null) {
                    tail.next = curr.right;
                    tail = tail.next;
                }
            }
            curr = head.next;
        }
        return root;
    }
}